# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'tes.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys, json

from PyQt5 import QtCore, QtGui, QtWidgets
from gui import searchGui, details, Controller, config

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1000, 800)
        MainWindow.setMaximumSize(QtCore.QSize(1000, 800))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setMaximumSize(QtCore.QSize(1000, 800))
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(0, 0, 1001, 51))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(200, 0, 200, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.textEdit = QtWidgets.QTextEdit(self.horizontalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textEdit.sizePolicy().hasHeightForWidth())
        self.textEdit.setSizePolicy(sizePolicy)
        self.textEdit.setMaximumSize(QtCore.QSize(500, 30))
        self.textEdit.setInputMethodHints(QtCore.Qt.ImhNone)
        self.textEdit.setTabChangesFocus(False)
        self.textEdit.setAcceptRichText(False)
        self.textEdit.setObjectName("textEdit")
        self.horizontalLayout.addWidget(self.textEdit)
        self.pushButton = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.btnSearchClick)
        self.horizontalLayout.addWidget(self.pushButton)
        self.horizontalLayout.setStretch(0, 50)
        self.gridLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(0, 50, 1001, 751))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridAnimeList = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridAnimeList.setSizeConstraint(QtWidgets.QLayout.SetMaximumSize)
        self.gridAnimeList.setContentsMargins(25, 25, 25, 25)
        self.gridAnimeList.setObjectName("gridAnimeList")

        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 1000, 27))
        self.menuBar.setObjectName("menuBar")
        self.menuAnime = QtWidgets.QMenu(self.menuBar)
        self.menuAnime.setObjectName("menuAnime")
        self.menuAnilist = QtWidgets.QMenu(self.menuBar)
        self.menuAnilist.setObjectName("menuAnilist")
        MainWindow.setMenuBar(self.menuBar)
        self.actionContinue_Watching = QtWidgets.QAction(MainWindow)
        self.actionContinue_Watching.setObjectName("actionContinue_Watching")
        self.actionOpen_History = QtWidgets.QAction(MainWindow)
        self.actionOpen_History.setObjectName("actionOpen_History")
        self.actionOpen_Anilist_Setting = QtWidgets.QAction(MainWindow)
        self.actionOpen_Anilist_Setting.setObjectName("actionOpen_Anilist_Setting")
        self.actionConfiguration = QtWidgets.QAction(MainWindow)
        self.actionConfiguration.setObjectName("actionConfiguration")
        self.actionmyList = QtWidgets.QAction(MainWindow)
        self.actionmyList.setObjectName("actionmyList")
        self.menuAnime.addAction(self.actionContinue_Watching)
        self.menuAnime.addAction(self.actionOpen_History)
        self.menuAnime.addAction(self.actionConfiguration)
        self.menuAnilist.addAction(self.actionOpen_Anilist_Setting)
        self.menuAnilist.addAction(self.actionmyList)
        self.menuBar.addAction(self.menuAnime.menuAction())
        self.menuBar.addAction(self.menuAnilist.menuAction())

        MainWindow.setCentralWidget(self.centralwidget)

        self.actionConfiguration.triggered.connect(lambda: self.openConfig())
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def addAnimeBox(self,MainWindow,anime):
        frameAnime = QtWidgets.QFrame(self.gridLayoutWidget)
        frameAnime.setMaximumSize(QtCore.QSize(450, 150))
        frameAnime.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        frameAnime.setFrameShape(QtWidgets.QFrame.Box)
        frameAnime.setFrameShadow(QtWidgets.QFrame.Raised)
        frameAnime.setLineWidth(5)
        frameAnime.setObjectName(anime.objName)
        gridLayoutWidget_2 = QtWidgets.QWidget(frameAnime)
        gridLayoutWidget_2.setGeometry(QtCore.QRect(0, 0, 451, 151))
        gridLayoutWidget_2.setObjectName("gridLayoutWidget_2")
        gridAnime = QtWidgets.QGridLayout(gridLayoutWidget_2)
        gridAnime.setContentsMargins(10, 10, 10, 10)
        gridAnime.setHorizontalSpacing(15)
        gridAnime.setObjectName("gridAnime")
        lblstatus = QtWidgets.QLabel(gridLayoutWidget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(lblstatus.sizePolicy().hasHeightForWidth())
        lblstatus.setSizePolicy(sizePolicy)
        lblstatus.setMaximumSize(QtCore.QSize(225, 30))
        lblstatus.setObjectName("lblstatus")
        gridAnime.addWidget(lblstatus, 1, 1, 1, 1)
        lbl_eps = QtWidgets.QLabel(gridLayoutWidget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(lbl_eps.sizePolicy().hasHeightForWidth())
        lbl_eps.setSizePolicy(sizePolicy)
        lbl_eps.setMaximumSize(QtCore.QSize(225, 30))
        lbl_eps.setObjectName("lbl_eps")
        gridAnime.addWidget(lbl_eps, 2, 1, 1, 1)
        lbl_title = QtWidgets.QLabel(gridLayoutWidget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(lbl_title.sizePolicy().hasHeightForWidth())
        lbl_title.setSizePolicy(sizePolicy)
        lbl_title.setMaximumSize(QtCore.QSize(225, 30))
        lbl_title.setObjectName("lbl_title")
        gridAnime.addWidget(lbl_title, 0, 1, 1, 1)
        lbl_img = QtWidgets.QLabel(gridLayoutWidget_2)
        lbl_img.setMaximumSize(QtCore.QSize(90, 125))
        lbl_img.setScaledContents(True)
        lbl_img.setText("")
        lbl_img.setPixmap(QtGui.QPixmap(anime.thumb))
        lbl_img.setObjectName("lbl_img")
        gridAnime.addWidget(lbl_img, 0, 0, 3, 1)
        btn_play = QtWidgets.QPushButton(gridLayoutWidget_2, clicked = lambda: self.frameClick(anime))
        btn_play.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        btn_play.setMaximumSize(QtCore.QSize(50, 180))
        btn_play.setObjectName("btn_play")
        gridAnime.addWidget(btn_play, 0, 2, 3, 1)
        btn_play.setText("PLAY")
        lbl_eps.setText("Episode : "+anime.eps)
        lbl_title.setText(anime.title)
        lblstatus.setText("Status : "+anime.status)
        return frameAnime
        # self.gridAnimeList.addWidget(frameAnime, cord[0], cord[1], cord[2], cord[3])

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "AniScrap"))
        self.textEdit.setPlaceholderText(_translate("MainWindow", "Cari Anime"))
        self.pushButton.setText(_translate("MainWindow", "Cari"))
        self.menuAnime.setTitle(_translate("MainWindow", "Anime"))
        self.menuAnilist.setTitle(_translate("MainWindow", "Anilist"))
        self.actionContinue_Watching.setText(_translate("MainWindow", "Continue Watching"))
        self.actionOpen_History.setText(_translate("MainWindow", "Open History"))
        self.actionOpen_Anilist_Setting.setText(_translate("MainWindow", "Open Anilist Setting"))
        self.actionConfiguration.setText(_translate("MainWindow", "Configuration"))
        self.actionmyList.setText(_translate("MainWindow", "My List"))

    def frameClick(self,anime):
        Controller.showDetail(self,anime)

    def btnSearchClick(self):
        Controller.btnSearchClick(self)

    def updateList(self,MainWindow, animes):
        Controller.updateList(self,animes,MainWindow)

    def openConfig(self):
        Controller.openConfig(self)
